
// File auto-generated by Padrick 0.3.6
module cheshire_padframe_sim
  import pkg_cheshire_padframe_sim::*;
#(
  parameter int unsigned   AW = 32,
  parameter int unsigned   DW = 32,
  parameter type req_t = logic, // reg_interface request type
  parameter type resp_t = logic, // reg_interface response type
  parameter logic [DW-1:0] DecodeErrRespData = 32'hdeadda7a
)(
  input logic                                clk_i,
  input logic                                rst_ni,
  output static_connection_signals_pad2soc_t static_connection_signals_pad2soc,
  input  static_connection_signals_soc2pad_t static_connection_signals_soc2pad,
  // Landing Pads
  inout wire logic                           pad_main_core_clk_pad,
  inout wire logic                           pad_main_ref_clk_pad,
  inout wire logic                           pad_main_reset_n_pad,
  inout wire logic                           pad_main_testmode_pad,
  inout wire logic                           pad_main_bootmode0_pad,
  inout wire logic                           pad_main_bootmode1_pad,
  inout wire logic                           pad_main_jtag_tck_pad,
  inout wire logic                           pad_main_jtag_trst_n_pad,
  inout wire logic                           pad_main_jtag_tms_pad,
  inout wire logic                           pad_main_jtag_tdi_pad,
  inout wire logic                           pad_main_jtag_tdo_pad,
  inout wire logic                           pad_main_uart_rx_pad,
  inout wire logic                           pad_main_uart_tx_pad,
  inout wire logic                           pad_main_spim_sck_pad,
  inout wire logic                           pad_main_spim_csb0_pad,
  inout wire logic                           pad_main_spim_csb1_pad,
  inout wire logic                           pad_main_spim_sd0_pad,
  inout wire logic                           pad_main_spim_sd1_pad,
  inout wire logic                           pad_main_spim_sd2_pad,
  inout wire logic                           pad_main_spim_sd3_pad,
  inout wire logic                           pad_main_i2c_scl_pad,
  inout wire logic                           pad_main_i2c_sda_pad,
  inout wire logic                           pad_main_ddr_link_clk_in_pad,
  inout wire logic                           pad_main_ddr_link_clk_out_pad,
  inout wire logic                           pad_main_ddr_link_in0_pad,
  inout wire logic                           pad_main_ddr_link_in1_pad,
  inout wire logic                           pad_main_ddr_link_in2_pad,
  inout wire logic                           pad_main_ddr_link_in3_pad,
  inout wire logic                           pad_main_ddr_link_out0_pad,
  inout wire logic                           pad_main_ddr_link_out1_pad,
  inout wire logic                           pad_main_ddr_link_out2_pad,
  inout wire logic                           pad_main_ddr_link_out3_pad,
  inout wire logic                           pad_main_vga_hsync_pad,
  inout wire logic                           pad_main_vga_vsync_pad,
  inout wire logic                           pad_main_vga_red_0_pad,
  inout wire logic                           pad_main_vga_red_1_pad,
  inout wire logic                           pad_main_vga_red_2_pad,
  inout wire logic                           pad_main_vga_green_0_pad,
  inout wire logic                           pad_main_vga_green_1_pad,
  inout wire logic                           pad_main_vga_green_2_pad,
  inout wire logic                           pad_main_vga_blue_0_pad,
  inout wire logic                           pad_main_vga_blue_1_pad,
  inout wire logic                           pad_main_rpc_clk_pad,
  inout wire logic                           pad_main_rpc_clk_n_pad,
  inout wire logic                           pad_main_rpc_cs_n_pad,
  inout wire logic                           pad_main_rpc_stb_pad,
  inout wire logic                           pad_main_rpc_dqs_pad,
  inout wire logic                           pad_main_rpc_dqs_n_pad,
  inout wire logic                           pad_main_rpc_db0_pad,
  inout wire logic                           pad_main_rpc_db1_pad,
  inout wire logic                           pad_main_rpc_db2_pad,
  inout wire logic                           pad_main_rpc_db3_pad,
  inout wire logic                           pad_main_rpc_db4_pad,
  inout wire logic                           pad_main_rpc_db5_pad,
  inout wire logic                           pad_main_rpc_db6_pad,
  inout wire logic                           pad_main_rpc_db7_pad,
  inout wire logic                           pad_main_rpc_db8_pad,
  inout wire logic                           pad_main_rpc_db9_pad,
  inout wire logic                           pad_main_rpc_db10_pad,
  inout wire logic                           pad_main_rpc_db11_pad,
  inout wire logic                           pad_main_rpc_db12_pad,
  inout wire logic                           pad_main_rpc_db13_pad,
  inout wire logic                           pad_main_rpc_db14_pad,
  inout wire logic                           pad_main_rpc_db15_pad,
  // Config Interface
  input req_t                                config_req_i,
  output resp_t                              config_rsp_o
  );


  req_t main_config_req;
  resp_t main_config_resp;
  cheshire_padframe_sim_main #(
    .req_t(req_t),
    .resp_t(resp_t)
  ) i_main (
   .clk_i,
   .rst_ni,
   .static_connection_signals_pad2soc(static_connection_signals_pad2soc.main),
   .static_connection_signals_soc2pad(static_connection_signals_soc2pad.main),
   .pad_core_clk_pad(pad_main_core_clk_pad),
   .pad_ref_clk_pad(pad_main_ref_clk_pad),
   .pad_reset_n_pad(pad_main_reset_n_pad),
   .pad_testmode_pad(pad_main_testmode_pad),
   .pad_bootmode0_pad(pad_main_bootmode0_pad),
   .pad_bootmode1_pad(pad_main_bootmode1_pad),
   .pad_jtag_tck_pad(pad_main_jtag_tck_pad),
   .pad_jtag_trst_n_pad(pad_main_jtag_trst_n_pad),
   .pad_jtag_tms_pad(pad_main_jtag_tms_pad),
   .pad_jtag_tdi_pad(pad_main_jtag_tdi_pad),
   .pad_jtag_tdo_pad(pad_main_jtag_tdo_pad),
   .pad_uart_rx_pad(pad_main_uart_rx_pad),
   .pad_uart_tx_pad(pad_main_uart_tx_pad),
   .pad_spim_sck_pad(pad_main_spim_sck_pad),
   .pad_spim_csb0_pad(pad_main_spim_csb0_pad),
   .pad_spim_csb1_pad(pad_main_spim_csb1_pad),
   .pad_spim_sd0_pad(pad_main_spim_sd0_pad),
   .pad_spim_sd1_pad(pad_main_spim_sd1_pad),
   .pad_spim_sd2_pad(pad_main_spim_sd2_pad),
   .pad_spim_sd3_pad(pad_main_spim_sd3_pad),
   .pad_i2c_scl_pad(pad_main_i2c_scl_pad),
   .pad_i2c_sda_pad(pad_main_i2c_sda_pad),
   .pad_ddr_link_clk_in_pad(pad_main_ddr_link_clk_in_pad),
   .pad_ddr_link_clk_out_pad(pad_main_ddr_link_clk_out_pad),
   .pad_ddr_link_in0_pad(pad_main_ddr_link_in0_pad),
   .pad_ddr_link_in1_pad(pad_main_ddr_link_in1_pad),
   .pad_ddr_link_in2_pad(pad_main_ddr_link_in2_pad),
   .pad_ddr_link_in3_pad(pad_main_ddr_link_in3_pad),
   .pad_ddr_link_out0_pad(pad_main_ddr_link_out0_pad),
   .pad_ddr_link_out1_pad(pad_main_ddr_link_out1_pad),
   .pad_ddr_link_out2_pad(pad_main_ddr_link_out2_pad),
   .pad_ddr_link_out3_pad(pad_main_ddr_link_out3_pad),
   .pad_vga_hsync_pad(pad_main_vga_hsync_pad),
   .pad_vga_vsync_pad(pad_main_vga_vsync_pad),
   .pad_vga_red_0_pad(pad_main_vga_red_0_pad),
   .pad_vga_red_1_pad(pad_main_vga_red_1_pad),
   .pad_vga_red_2_pad(pad_main_vga_red_2_pad),
   .pad_vga_green_0_pad(pad_main_vga_green_0_pad),
   .pad_vga_green_1_pad(pad_main_vga_green_1_pad),
   .pad_vga_green_2_pad(pad_main_vga_green_2_pad),
   .pad_vga_blue_0_pad(pad_main_vga_blue_0_pad),
   .pad_vga_blue_1_pad(pad_main_vga_blue_1_pad),
   .pad_rpc_clk_pad(pad_main_rpc_clk_pad),
   .pad_rpc_clk_n_pad(pad_main_rpc_clk_n_pad),
   .pad_rpc_cs_n_pad(pad_main_rpc_cs_n_pad),
   .pad_rpc_stb_pad(pad_main_rpc_stb_pad),
   .pad_rpc_dqs_pad(pad_main_rpc_dqs_pad),
   .pad_rpc_dqs_n_pad(pad_main_rpc_dqs_n_pad),
   .pad_rpc_db0_pad(pad_main_rpc_db0_pad),
   .pad_rpc_db1_pad(pad_main_rpc_db1_pad),
   .pad_rpc_db2_pad(pad_main_rpc_db2_pad),
   .pad_rpc_db3_pad(pad_main_rpc_db3_pad),
   .pad_rpc_db4_pad(pad_main_rpc_db4_pad),
   .pad_rpc_db5_pad(pad_main_rpc_db5_pad),
   .pad_rpc_db6_pad(pad_main_rpc_db6_pad),
   .pad_rpc_db7_pad(pad_main_rpc_db7_pad),
   .pad_rpc_db8_pad(pad_main_rpc_db8_pad),
   .pad_rpc_db9_pad(pad_main_rpc_db9_pad),
   .pad_rpc_db10_pad(pad_main_rpc_db10_pad),
   .pad_rpc_db11_pad(pad_main_rpc_db11_pad),
   .pad_rpc_db12_pad(pad_main_rpc_db12_pad),
   .pad_rpc_db13_pad(pad_main_rpc_db13_pad),
   .pad_rpc_db14_pad(pad_main_rpc_db14_pad),
   .pad_rpc_db15_pad(pad_main_rpc_db15_pad),
   .config_req_i(main_config_req),
   .config_rsp_o(main_config_resp)
  );


   localparam int unsigned NUM_PAD_DOMAINS = 1;
   localparam int unsigned REG_ADDR_WIDTH = 3;
   typedef struct packed {
      int unsigned idx;
      logic [REG_ADDR_WIDTH-1:0] start_addr;
      logic [REG_ADDR_WIDTH-1:0] end_addr;
   } addr_rule_t;

   localparam addr_rule_t[NUM_PAD_DOMAINS-1:0] ADDR_DEMUX_RULES = '{
     '{ idx: 0, start_addr: 3'd0,  end_addr: 3'd4}
     };
   logic[$clog2(NUM_PAD_DOMAINS+1)-1:0] pad_domain_sel; // +1 since there is an additional error slave
   addr_decode #(
       .NoIndices(NUM_PAD_DOMAINS+1),
       .NoRules(NUM_PAD_DOMAINS),
       .addr_t(logic[REG_ADDR_WIDTH-1:0]),
       .rule_t(addr_rule_t)
     ) i_addr_decode(
       .addr_i(config_req_i.addr[REG_ADDR_WIDTH-1:0]),
       .addr_map_i(ADDR_DEMUX_RULES),
       .dec_valid_o(),
       .dec_error_o(),
       .idx_o(pad_domain_sel),
       .en_default_idx_i(1'b1),
       .default_idx_i(1'd1) // The last entry is the error slave
     );

     req_t error_slave_req;
     resp_t error_slave_rsp;

     // Config Interface demultiplexing
     reg_demux #(
       .NoPorts(NUM_PAD_DOMAINS+1), //+1 for the error slave
       .req_t(req_t),
       .rsp_t(resp_t)
     ) i_config_demuxer (
       .clk_i,
       .rst_ni,
       .in_select_i(pad_domain_sel),
       .in_req_i(config_req_i),
       .in_rsp_o(config_rsp_o),
       .out_req_o({error_slave_req, main_config_req}),
       .out_rsp_i({error_slave_rsp, main_config_resp})
     );

     assign error_slave_rsp.error = 1'b1;
     assign error_slave_rsp.rdata = DecodeErrRespData;
     assign error_slave_rsp.ready = 1'b1;

endmodule
